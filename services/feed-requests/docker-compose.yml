version: '3.8'
services:
  mrss-rabbitmq-broker:
    image: rabbitmq:3-management-alpine
    container_name: 'mrss-rabbitmq-broker'
    ports:
        - 5672:5672
        - 15672:15672
  mrss-mongo:
    restart: on-failure:5
    command: mongod --port 27017
    logging:
      driver: none
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - "db-mongodb-data:/data/db"
  mrss-postgres:
    container_name: mrss-postgres-container
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'postgres', '-U', 'postgres']
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # Comment below to show mongo logs
    # logging:
    #   driver: none
    image: postgres:14.1-alpine
    ports:
      - '5444:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./sql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
  mrss-service:
    container_name: mrss-service-container
    restart: on-failure:3
    # The image can also be used
    build:
      context: .
      target: build
    ports:
      - '5000:5000'
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules/
    command: npm run start:local
    depends_on:
      - mrss-postgres
      - mrss-rabbitmq-broker
    env_file:
      - .env.local
    environment:
      - FEED_REQUESTS_POSTGRES_URI=postgres://postgres:postgres@mrss-postgres:5432/feedfetcher
      - FEED_REQUESTS_MAX_FAIL_ATTEMPTS=11
      - FEED_REQUESTS_API_PORT=5000
      - FEED_REQUESTS_SKIP_POLLING_SQS_REQUEST_QUEUE=false
      - BACKEND_API_RABBITMQ_BROKER_URL=amqp://guest:guest@mrss-rabbitmq-broker:5672/


volumes:
  db-mongodb-data:
  db:
    driver: local
